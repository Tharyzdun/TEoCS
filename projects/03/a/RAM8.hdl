// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address, a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
	DMux8Way16(in=in, sel=address, a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);
	
	Register(in=r0, load=load0, out=out0);
	Register(in=r1, load=load1, out=out1);
	Register(in=r2, load=load2, out=out2);
	Register(in=r3, load=load3, out=out3);
	Register(in=r4, load=load4, out=out4);
	Register(in=r5, load=load5, out=out5);
	Register(in=r6, load=load6, out=out6);
	Register(in=r7, load=load7, out=out7);
	
	Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
}